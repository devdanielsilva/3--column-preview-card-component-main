@import url('https://fonts.googleapis.com/css2?family=Big+Shoulders+Display:wght@700&family=Red+Hat+Display:wght@700&display=swap'); /*Import de duas fontes, Big Shoulders Display e a fonte */

body {
    background-color: hsl(0, 0%, 98%);
    min-height: 100vh;
    /*Altura miníma do dispositivo. Vw, por exemplo, V = view, ou seja, a tela do seu navegador, e W = width, largura, portanto 100vw é 100%, em outras palavras, toda a largura visível do navegador. Seguindo a ideia o Vh é V = view, H = height que significa altura, então 100vh é toda altura visível do seu navegador.*/

    display: flex;
    /*O display: flex funciona de uma maneira diferente dos outros displays. Quando colocamos essa propriedade em um elemento, esse elemento se torna um flex container, a partir daí podemos manipular todos os elementos filhos desse flex container com propriedades novas.*/

    align-items: center;
    /*A propriedade align-items tem a função de alinhar os elementos no eixo transversal. Por padrão, o valor inicial da propriedade é stretch. E ao usar a propriedade center, os elementos ficam centralizados no meio da tela.*/

    font-size: 15px;
    /*A propriedade font-size no CSS estabelece o tamanho da fonte. Esta propriedade também é usada para computaro tamanho de rem , em , ex , % , px , e outras unidades <length> (en-US) relativas*/

    font-family: 'Lexend Deca', sans-serif;

    font-weight: 400px;
    /*A propriedade CSS font-weight especifica o peso ou a intensidade da fonte (ex.: negrito). Algumas fontes oferecem apenas as opções normal e negrito.*/
}

/**/
.container {
    max-width: 960px;
    /*A propriedade max-width do CSS estabelece a largura máxima de um elemento. Ele evita que o valor usado da propriedade width se torne maior que o valor especificado por max-width .*/

    margin: 0 auto;
    /*A propriedade margin do CSS define a área de margem nos quatro lados do elemento. É uma abreviação que define todas as margens individuais de uma só vez: margin-top , margin-right (en-US), margin-bottom , e margin-left*/
    /*Nesse caso aqui, em cima e em baixo a margem é 0, e na direita e na esquerda a margem e adaptavél, usando a propriedade auto.*/
}

.wrapper {
    display: grid;
    /*O CSS Grid é um sistema de estruturação de layout que o CSS nos fornece. Diferente do Flexbox, que apenas nos permite trabalhar em uma única dimensão, o CSS Grid nos permite configurar layouts em duas dimensões (linhas e colunas). A junção de linhas e colunas formam uma grade, o que dá o nome a esse sistema (Grid).*/

    grid-template-columns: 1fr 1fr 1fr;
    /*grid-template-columns, é usado para adicionar quantas colunas queremos na nossa grade.*/
    /*E para as linhas da grade usamos o grid-template-rows*/

    border-radius: 12px;
    /*No CSS3 a propriedade border-radius destina-se a definir bordas arredondadas. 
    O arredondamento das bordas é feito com declaração de dois valores CSS de medida; o primeiro define o eixo horizontal (rx) de 1/4 de uma elipse e o segundo o eixo vertical (ry)*/

    margin: 2rem;
    /*As margems; margin-top, margin-right, margin-left e margin-bottom. Todas elas terão o espaçamento de 2rem.*/

    overflow: hidden;
    /**/
}

.box1 {
    background-color: hsl(31, 77%, 52%);
}

.box2 {
    background-color: hsl(184, 100%, 22%);
}

.box3 {
    background-color: hsl(179, 100%, 13%);
}

.box {
    padding: 40px;
}

.box h2 {
    font-family: 'Big Shoulders Display', cursive;
    text-transform: uppercase;
    color: white;
    font-size: 30px;
}